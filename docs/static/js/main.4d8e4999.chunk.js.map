{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GidGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","a","preventDefault","trim","length","cat","type","value","onChange","arg","target","getGifs","category","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,sBAAMC,SARS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAsBO,OACpCN,EAAc,MAId,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAfgB,SAACC,GACrBV,EAAcU,EAAIC,OAAOH,a,+BCPpBI,EAAO,uCAAC,WAAMC,GAAN,uBAAAX,EAAA,6DACXY,EADW,0FAC4EC,UAAUF,IADtF,SAEAG,MAAMF,GAFN,cAEXG,EAFW,gBAGEA,EAAKC,OAHP,uBAGVC,EAHU,EAGVA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAChB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAD,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,+CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECAb,SAACA,GAAY,IAAD,EACRf,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAHsB,mBAC3BC,EAD2B,KACpBC,EADoB,KAalC,OARAC,qBAAU,WACNvB,EAAQC,GAAUuB,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACnB,IACIoB,EDTmBK,CAAazB,GAA7BY,EAJyB,EAI9BN,KAAYa,EAJkB,EAIlBA,QAEjB,OACI,qCACA,6BAAKnB,IACJmB,GAAS,mBAAGJ,UAAU,mCAAb,qBACN,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOvBgB,EApBI,WAAI,MAEazC,mBAAS,CAAC,eAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG2C,EAAWnB,KAAI,SAAAoB,GAAC,OACnB,cAAC,EAAD,CAAS5B,SAAU4B,GAAQA,YCXnCC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d8e4999.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const handleInputChange=(arg)=>{\r\n        setInputValue(arg.target.value) \r\n    }\r\n    const handleSubmit=(a)=>{\r\n        a.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n        setCategories((cat)=>[inputValue,...cat])\r\n        setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n  }\r\n","export const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=T8GjBUqOtn6jubdWQKoXN4m0JGGXpyhx&q=${encodeURI(category)}`\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated  animate__backInRight\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GidGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n\r\n  const {data:images,loading}=useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading&&<p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n               \r\n                { \r\n                images.map(img=>(\r\n                <GifGridItem key={img.id} {...img}/>))\r\n                }\r\n               \r\n            </div>\r\n            </>\r\n    )\r\n}\r\n","import { useState,useEffect} from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });    \r\n        })\r\n    },[category])\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp=()=>{\r\n//const categories=['Pedro','Hernan','Tomas']\r\nconst [categories, setCategories] = useState([\"Bienvenido\"])  \r\n\r\nreturn( \r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr></hr>\r\n        <ol>\r\n        {  categories.map(c=>(\r\n        <GifGrid category={c} key={c}/>\r\n        ))}\r\n        </ol>\r\n           \r\n    </>\r\n    );\r\n  }\r\n\r\n  \r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}